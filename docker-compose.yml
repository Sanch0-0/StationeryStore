services:
  web:
    build:
      context: .
      dockerfile: etc/docker/Dockerfile
    container_name: django
    restart: always
    env_file: .env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./etc/gunicorn/sockets:/gunicorn/sockets
      - ./logs:/logs
    networks:
      - webnet


  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - webnet

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - webnet

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "8888:80"
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./etc/gunicorn/sockets:/gunicorn/sockets
    depends_on:
      - web
    networks:
      - webnet

  celery:
    build:
      context: .
      dockerfile: etc/docker/Dockerfile
    container_name: celery
    restart: always
    depends_on:
      - web
      - redis
    command: celery -A config worker --loglevel=info
    networks:
      - webnet

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  webnet:
    driver: bridge
